import streamlit as st
from src.core.balance_hidrico import calcular_balance_hidrico
from src.core.recomendador import generar_recomendacion_riego

# --- Configuraci√≥n de la p√°gina ---
st.set_page_config(
    page_title="Pluviometr√≠a - Asesor de Riego",
    page_icon="üíß",
    layout="wide"
)

# --- Barra Lateral (Inputs del Usuario) ---
st.sidebar.header("Par√°metros del Campo")

agua_ayer = st.sidebar.number_input(
    "Agua disponible ayer (mm)", 
    min_value=0.0, 
    value=20.0, 
    step=0.5,
    help="Humedad en la zona de ra√≠ces del d√≠a anterior."
)
lluvia_hoy = st.sidebar.number_input(
    "Lluvia efectiva de hoy (mm)", 
    min_value=0.0, 
    value=5.0, 
    step=0.1,
    help="Precipitaci√≥n que realmente se infiltr√≥ en el suelo."
)
riego_hoy = st.sidebar.number_input(
    "Riego aplicado hoy (mm)", 
    min_value=0.0, 
    value=0.0, 
    step=1.0
)
et_hoy = st.sidebar.number_input(
    "Evapotranspiraci√≥n (ET) hoy (mm)", 
    min_value=0.0, 
    value=3.5, 
    step=0.1,
    help="Agua perdida por evaporaci√≥n y transpiraci√≥n de la planta."
)

st.sidebar.markdown("---")
st.sidebar.header("Configuraci√≥n de Alertas")

umbral_optimo = st.sidebar.slider(
    "Umbral √≥ptimo de humedad (mm)", 
    min_value=10.0, 
    max_value=50.0, 
    value=25.0, 
    step=0.5,
    help="Nivel m√≠nimo de agua deseado para el cultivo."
)
pronostico_lluvia = st.sidebar.number_input(
    "Pron√≥stico de lluvia para ma√±ana (mm)", 
    min_value=0.0, 
    value=0.0, 
    step=0.1
)


# --- Cuerpo Principal de la Aplicaci√≥n ---
st.title("üíß Asesor de Riego Inteligente")
st.markdown("Esta herramienta te ayuda a tomar decisiones de riego informadas basadas en el balance h√≠drico de tu cultivo.")

# --- C√°lculos del motor ---
try:
    # 1. Calcular el balance h√≠drico
    agua_disponible_hoy = calcular_balance_hidrico(
        agua_ayer=agua_ayer,
        lluvia_efectiva=lluvia_hoy,
        riego_aplicado=riego_hoy,
        evapotranspiracion=et_hoy
    )

    # 2. Generar la recomendaci√≥n de riego
    recomendacion = generar_recomendacion_riego(
        agua_disponible=agua_disponible_hoy,
        umbral_optimo=umbral_optimo,
        pronostico_lluvia_mm=pronostico_lluvia
    )

    # --- Mostrar resultados ---
    st.markdown("---")
    st.header("Resultados y Recomendaci√≥n")

    col1, col2 = st.columns(2)

    with col1:
        st.subheader("Balance H√≠drico Actual")
        st.metric(
            label="Agua Disponible en el Suelo",
            value=f"{agua_disponible_hoy:.2f} mm",
            delta=f"{(agua_disponible_hoy - agua_ayer):.2f} mm vs ayer",
            help="El delta muestra si la reserva de agua aument√≥ o disminuy√≥ hoy."
        )

    with col2:
        st.subheader("Recomendaci√≥n de Riego")
        if "No se requiere riego" in recomendacion:
            st.success(f"‚úÖ {recomendacion}")
        elif "Se recomienda esperar" in recomendacion:
            st.info(f"ü§î {recomendacion}")
        else: # "Se recomienda aplicar"
            st.warning(f"‚ö†Ô∏è {recomendacion}")

except ValueError as e:
    st.error(f"Error en los datos de entrada: {e}")

st.markdown("---")
st.write("Desarrollado para el proyecto Pluviometr√≠a.")
